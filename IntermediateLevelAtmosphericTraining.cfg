 CONTRACT_TYPE
    { //Define Contract Information / Displayed Information
        name = IntermediateAtmosphericPilotTraining
        title = Kerbal Academy: Intermediate Level Atmospheric Piloting Course
		group = KerbalAcademy
        description = KSC administration has chosen @trainee to complete an intermediate level atmospheric flight training. Completing the course will give @/trainee valuable piloting experience.  
		genericDescription = Have the trainee land safely after completing the course and achieve the following flight parameters.
        synopsis = Complete the training course with @/trainee.
        completedMessage = Congratulations @/trainee 
        agent = Kerbal Academy
		notes = The parameters must be completed in order.
        minExpiry = 1
        maxExpiry = 7
		maxSimultaneous = 1
        cancellable = true
        declinable = true
        prestige = Significant
        targetBody = HomeWorld()
        rewardScience = 0.0
        rewardReputation = 0.0
        rewardFunds = 0
        failureReputation = 0
        failureFunds = 0
        advanceFunds = @/trainingCost
		
		//Find Kerbal 
		DATA
		{ 
			type = Kerbal
			uniquenessCheck = CONTRACT_ACTIVE
			trainee = AllKerbals().Where(m => m.ExperienceTrait() == Pilot && m.Type() == Crew && m.RosterStatus() == Available && m.ExperienceLevel() >=2 &&  m.ExperienceLevel() <=3).Random()
			title = Must have a Pilot between Level 2 and 3 available in the roster. 
		}
		
		// Decide Reward Multipliers 
		DATA
		{	
			type = double
			currentLevel = @/trainee.ExperienceLevel()
			rewardMultiplier = Random(1,3)
			expMultiplier = @currentLevel == 2 ? 6 : 8 
			costMultiplier = (((@currentLevel)*(@rewardMultiplier)*1.5))
		}
		
		//Pick All Flight Parameters
		DATA
		{
			type = double
			alt1Random = (Random(-3,3))*500
			alt2Random = (Random(-3,3))*500
			minAlt = @currentLevel == 2 ? 4000 : 6500
			maxAlt = @currentLevel == 2 ? 4500 : 6000
			minRateClimb = @currentLevel == 2 ? -10 : -5 
			maxRateClimb = @currentLevel == 2 ? 10 : 5
			minVec = @currentLevel == 2 ? 240 : 320 
			maxVec = @currentLevel == 2 ? 260 : 280  
		}
		
		//Determine Distance Parameters
		DATA
		{
			type = double
			minDist = @currentLevel == 1 ? 4000 : @currentLevel == 2 ? 2000 : 1500
			maxDist = @currentLevel == 1 ? 10000 : @currentLevel == 2 ? 8000 : 5000
			heightCeiling = @currentLevel == 1 ? 4000 : @currentLevel == 2 ? 4500 : 5000
		}
		
		//Set XP rewards
		DATA
		{
			type = double
			expAward = (@expMultiplier)*(@rewardMultiplier) 
		}
		
		//Set Cost
		DATA
		{ 
			type = double
			trainingCost = (-800*((@costMultiplier)*(@expAward)))
		}	
		
		//Check that everyone is onboard for launch
		PARAMETER
		{
			name = Inital Crew Check
			type = All
			title = Have @/trainee on board before flight.
			disableOnStateChange = true
			
			//Parameters checking each crew memeber 
			PARAMETER
			{
				name = Check Trainee
				type = HasCrew
				kerbal = @/trainee
				title = Have @/trainee on board.
				disableOnStateChange = false
			}
			
			//Are you prelaunch tho?
			PARAMETER
			{
				name = Check Landed
				type = ReachState
				hidden = true
				targetBody = HomeWorld()
				situation = PRELAUNCH
				disableOnStateChange = false
			}
		}
		
		BEHAVIOUR
		{
			name = WaypointGenerator
			type = WaypointGenerator
			
			PQS_CITY
			{
				name = KSC
				hidden = true
				parameter = Intial Crew Check
				pqsCity = KSC
			}
			
			RANDOM_WAYPOINT_NEAR
			{
				name = Training Course Starting Point
				icon = custom
				altitude = Random(250, @/heightCeiling)
				minDistance = @/minDist
				maxDistance = @/maxDist
				nearIndex = 0
				chained = true
			}
			
			RANDOM_WAYPOINT_NEAR
			{
				name = Training Course 2nd Marker
				icon = custom
				parameter = WP1
				altitude = Random(250, @/heightCeiling)
				minDistance = @/minDist
				maxDistance = @/maxDist
				nearIndex = 1
				chained = true
			}
			
			RANDOM_WAYPOINT_NEAR
			{
				name = Training Course 3rd Marker
				icon = custom
				parameter = WP2
				altitude = Random(250, @/heightCeiling)
				minDistance = @/minDist
				maxDistance = @/maxDist
				nearIndex = 2
				chained = true
			}
			
			RANDOM_WAYPOINT_NEAR
			{
				name = Final Training Course Marker
				icon = custom
				parameter = WP3
				altitude = Random(250, @/heightCeiling)
				minDistance = @/minDist
				maxDistance = @/maxDist
				nearIndex = 3
				chained = true
			}
		}
		
		PARAMETER
		{
			name = Fly Course
			type = All
			title = Successfully Fly Through All Course Markers
			completeInSequence = true
			
			PARAMETER
			{
				name = WP1
				type = VisitWaypoint
				title = Fly Through The Starting Waypoint
				index = 1
				hideOnCompletion = true
				disableOnStateChange = true
				completeInSequence = true
			}

			PARAMETER
			{
				name = WP2
				type = VisitWaypoint
				title = Fly Through The Second Waypoint
				index = 2
				hideOnCompletion = true
				disableOnStateChange = true
				completeInSequence = true
			}

			PARAMETER
			{
				name = WP3
				type = VisitWaypoint
				title = Fly Through The Third Waypoint
				index = 3
				hideOnCompletion = true
				disableOnStateChange = true
				completeInSequence = true
			}
			
			PARAMETER
			{
				name = WP4
				type = VisitWaypoint
				title = Fly Through The Final Waypoint
				index = 4
				hideOnCompletion = true
				disableOnStateChange = true
				completeInSequence = true
			}
		}
		
		PARAMETER
		{
			name = Situational Flight Practice
			type = All
			title = Practice Flying At Various Altitudes And Speeds
			disableOnStateChange = true
			completeInSequence = true
			
			PARAMETER
			{
				name = MAP
				type = All
				title = Practice Mantain Altitude 
				disableOnStateChange = true
				completeInSequence = true
				
				PARAMETER
				{
					name = Sit1
					type = ReachState
					disableOnStateChange = false
					completeInSequence = true
					targetBody = HomeWorld()
					minAltitude = (@/minAlt)+(@/alt1Random) 
					maxAltitude = (@/maxAlt)+(@/alt1Random) 
					minRateOfClimb = @/minRateClimb
					maxRateOfClimb = @/maxRateClimb
					situation = FLYING
				}
				
				PARAMETER
				{
					name = Duration
					type = Duration		
					duration = 30s
					preWaitText = Reach Situation
					waitingText = Maintain Stable Altitude
					completionText = Success
					parameter = Sit1
				}
			}
			
			PARAMETER
			{
				name = MSP
				type = All
				title = Practice Mantain Speed 
				disableOnStateChange = false
				completeInSequence = true

				PARAMETER
				{
					name = Sit2
					type = ReachState
					disableOnStateChange = false
					completeInSequence = true
					targetBody = HomeWorld()
					minSpeed = @/minVec
					maxSpeed = @/maxVec
					situation = FLYING
				}
				
				PARAMETER
				{
					name = Duration
					type = Duration		
					duration = 30s
					preWaitText = Reach Situation
					waitingText = Maintain Stable Speed
					completionText = Success
					parameter = Sit2
				}
			}
			
			PARAMETER
			{
				name = MFP
				type = All
				title = Practice Mantain Stable Flight
				disableOnStateChange = false
				completeInSequence = true
				
				PARAMETER
				{
					name = Sit3
					type = ReachState
					disableOnStateChange = false
					completeInSequence = true
					targetBody = HomeWorld()
					minSpeed = @/minVec
					maxSpeed = @/maxVec
					minRateOfClimb = @/minRateClimb
					maxRateOfClimb = @/maxRateClimb
					minAltitude = (@/minAlt)+(@/alt2Random) 
					maxAltitude = (@/maxAlt)+(@/alt2Random) 
					situation = FLYING
				}
				
				PARAMETER
				{
					name = Duration
					type = Duration		
					duration = 30s
					preWaitText = Reach Situation
					waitingText = Maintain Stable Flight
					completionText = Success
					parameter = Sit3
				}
			}
		}
		
		PARAMETER
		{
			name = landedSafe
			type = All
			title = Land Safely On The KSC Runway
			disableOnStateChange = false
			completeInSequence = true
			
			PARAMETER
			{
				name = onRunway
				type = ReachState
				title = Land
				completeInSequence = true	
				disableOnStateChange = true
				targetBody = HomeWorld()
				biome = Runway
				situation = LANDED
			}
			
			PARAMETER
			{	
				name = finalCrew
				type = HasCrew
				title = Have @/trainee onboard when you land
				completeInSequence = true
				disableOnStateChange = true
				kerbal = @/trainee
			}
		}
		
		BEHAVIOUR
		{
			name = AwardExperience
			type = AwardExperience
			parameter = landedSafe
			kerbal = @/trainee
			experience = @/expAward
		}	
	}