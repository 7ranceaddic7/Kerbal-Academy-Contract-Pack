//Pilot Boot camp contract
CONTRACT_TYPE
    { //Define Contract Information / Displayed Information
        name = BootCampPilotTraining
        title = Kerbal Academy: Piloting Bootcamp Course
		group = KerbalAcademy
        description = KSP administration has been looking for civilian pilots to recruit and have accepted @/trainee as a new pilot. @/mentor will be providing instruction. Fly the course and land safely and @/trainee will be added to the crew roster at level 1.
		genericDescription = New pilots will be added to the roster after completing testing and landing safely. 
        synopsis = Complete the training course with the new trainee.
        completedMessage = Congratulations @/trainee
        agent = Kerbal Academy
		notes = The parameters must be completed in order. A training craft has been parked at the SPH. 
        minExpiry = 1
        maxExpiry = 7
		maxSimultaneous = 1
        cancellable = true
        declinable = true
        prestige = Trivial
        targetBody = HomeWorld()
        rewardScience = 0.0
        rewardReputation = 0.0
        rewardFunds = 0
        failureReputation = 0
        failureFunds = 0
        advanceFunds = @/trainingCost
	
		//Find Possible Trainees
		DATA
		{
			type = List<Kerbal>
			requiredValue = false
			applyTrainees = AllKerbals().Where(a => a.RosterStatus() == Available && a.ExperienceTrait() == Pilot && a.Type() == Applicant)
			rosterTrainees = AllKerbals().Where(a => a.RosterStatus() == Available && a.ExperienceTrait() == Pilot && a.Type() == Crew && a.ExperienceLevel() < 1)
		}
		
		//Find Kerbal 
		DATA
		{ 
			type = Kerbal
			uniquenessCheck = CONTRACT_ACTIVE
			trainee = @rosterTrainees.Count() >=1 ? @rosterTrainees.Random() : @applyTrainees.Random()
			title = Have a Pilot Below Level 1 Or Have An Applicant Pilot In The Astronaut Complex 
		}
		
		// Find Mentor 
		DATA
		{	
			type = Kerbal
			uniquenessCheck = CONTRACT_ACTIVE
			mentor = AllKerbals().Where(m => m.ExperienceTrait() == Pilot && m.Type() == Crew && m.RosterStatus() == Available && m.ExperienceLevel() >=1).Random()
			title = Must have a Pilot at level one or higher available in the roster. 
		}
		
		//Set Cost
		DATA
		{ 
			type = double
			trainingCost = -(NextKerbalHireCost()+20000) //20000 for the training craft
		}	
		
		BEHAVIOUR
		{
			name = Spawn Training Aircraft
			type = SpawnVessel
			deferVesselCreation = false
			uniquenessCheck = CONTRACT_ACTIVE
			//Spawn training craft
			VESSEL
			{
				name = LPA MkI
				craftURL = ContractPacks\KerbalAcademy\Ships\Light Practice Aircraft Mk I.craft
				flagURL = ContractPacks\KerbalAcademy\Agent\PilotMissionPatch.png
				vesselType = Plane
				owned = false
				targetBody = Kerbin
				pqsCity = KSC
				pqsOffset = 
			}
		}
		
		//Check that everyone is onboard for launch
		PARAMETER
		{
			name = Inital Crew Check
			type = All
			title = Have @/trainee and @/mentor on board the training aircraft before flight.
			disableOnStateChange = true
			
			PARAMETER
			{
				name = Have @/mentor and @/trainee on board before takeoff.
				type = VesselParameterGroup
				vessel = LPA MkI
				title = Have @/trainee and @/mentor on board the Light Training Aircraft Mk I
				//Parameters checking each crew memeber 
				PARAMETER
				{
					name = Check Trainee
					type = HasCrew
					kerbal = @/trainee
					title = Have @/trainee on board.
					disableOnStateChange = false
				}
				
				PARAMETER
				{
					name = Check Mentor
					type = HasCrew
					kerbal = @/mentor
					title = Have @/mentor on board.
					disableOnStateChange = false
				}
			}
			//Are you landed tho?
			PARAMETER
			{
				name = Check Landed
				type = ReachState
				hidden = true
				targetBody = HomeWorld()
				situation = PRELAUNCH
				disableOnStateChange = false
			}
		}
		
		BEHAVIOUR
		{
			name = Training Waypoints
			type = WaypointGenerator
			
			PQS_CITY
			{
				name = Island Airfield
				hidden = true
				parameter = Intial Crew Check
				pqsCity = IslandAirfield
			}
			
			RANDOM_WAYPOINT_NEAR
			{
				name = Training Course Starting Point
				icon = custom
				altitude = Random(250, 4000)
				minDistance = 5000.0
				maxDistance = 8000.0
				nearIndex = 0
				chained = true
			}
			
			RANDOM_WAYPOINT_NEAR
			{
				name = Training Course 2nd Marker
				icon = custom
				parameter = WP1
				altitude = Random(250, 4000)
				minDistance = 5000.0
				maxDistance = 8000.0
				nearIndex = 1
				chained = true
			}
			
			RANDOM_WAYPOINT_NEAR
			{
				name = Training Course 3rd Marker
				icon = custom
				parameter = WP2
				altitude = Random(250, 4000)
				minDistance = 5000.0
				maxDistance = 8000.0
				nearIndex = 2
				chained = true
			}
			
			RANDOM_WAYPOINT_NEAR
			{
				name = Final Training Course Marker
				icon = custom
				parameter = WP3
				altitude = Random(250, 4000)
				minDistance = 5000.0
				maxDistance = 8000.0
				nearIndex = 3
				chained = true
			}
		}
		
		PARAMETER
		{
			name = Fly Course
			type = All
			title = Successfully Fly Through All Course Markers
			completeInSequence = true
			
			PARAMETER
			{
				name = WP1
				type = VisitWaypoint
				title = Fly Through The Starting Waypoint
				index = 1
				hideOnCompletion = true
				disableOnStateChange = true
				completeInSequence = true
			}

			PARAMETER
			{
				name = WP2
				type = VisitWaypoint
				title = Fly Through The Second Waypoint
				index = 2
				hideOnCompletion = true
				disableOnStateChange = true
				completeInSequence = true
			}

			PARAMETER
			{
				name = WP3
				type = VisitWaypoint
				title = Fly Through The Third Waypoint
				index = 3
				hideOnCompletion = true
				disableOnStateChange = true
				completeInSequence = true
			}
	
			PARAMETER
			{
				name = WP4
				type = VisitWaypoint
				title = Fly Through The Final Waypoint
				index = 4
				hideOnCompletion = true
				disableOnStateChange = true
				completeInSequence = true
			}
		}
		
		// Land safe home
		PARAMETER
		{
			name = landedSafe
			type = All
			title = Fly Back To And Land Safely On The KSC Runway.
			disableOnStateChange = false
			completeInSequence = true
			
			PARAMETER
			{
				name = onRunway
				type = ReachState
				title = Land on the KSC runway
				completeInSequence = true				
				targetBody = HomeWorld()
				biome = Runway
				situation = LANDED
			}
			
			//Final Crew Check
			PARAMETER
			{
				name = All Aboard  Light Training Aircraft MkI
				type = VesselParameterGroup
				vessel = LPA MkI
				title = Have @/trainee and @/mentor on board the Light Training Aircraft Mk I
				//Parameters checking each crew memeber 
				PARAMETER
				{
					name = Check Trainee
					type = HasCrew
					kerbal = @/trainee
					title = Have @/trainee on board.
					disableOnStateChange = false
				}
				
				PARAMETER
				{
					name = Check Mentor
					type = HasCrew
					kerbal = @/mentor
					title = Have @/mentor on board.
					disableOnStateChange = false
				}
			}
		}
		
		//Gimme that xp
		BEHAVIOUR
		{
			name = GiveTraineeXP
			type = AwardExperience
			parameter = landedSafe
			kerbal = @/trainee
			experience = 2
		}
	}
	
		